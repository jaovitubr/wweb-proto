syntax = "proto3";

enum KeepType {
	UNKNOWN = 0;
	KEEP_FOR_ALL = 1;
	UNDO_KEEP_FOR_ALL = 2;
}

message Message {
	string conversation = 1;
	SenderKeyDistributionMessage senderKeyDistributionMessage = 2;
	ImageMessage imageMessage = 3;
	ContactMessage contactMessage = 4;
	LocationMessage locationMessage = 5;
	ExtendedTextMessage extendedTextMessage = 6;
	DocumentMessage documentMessage = 7;
	AudioMessage audioMessage = 8;
	VideoMessage videoMessage = 9;
	Call call = 10;
	Chat chat = 11;
	ProtocolMessage protocolMessage = 12;
	ContactsArrayMessage contactsArrayMessage = 13;
	HighlyStructuredMessage highlyStructuredMessage = 14;
	SenderKeyDistributionMessage fastRatchetKeySenderKeyDistributionMessage = 15;
	SendPaymentMessage sendPaymentMessage = 16;
	LiveLocationMessage liveLocationMessage = 18;
	RequestPaymentMessage requestPaymentMessage = 22;
	DeclinePaymentRequestMessage declinePaymentRequestMessage = 23;
	CancelPaymentRequestMessage cancelPaymentRequestMessage = 24;
	TemplateMessage templateMessage = 25;
	StickerMessage stickerMessage = 26;
	GroupInviteMessage groupInviteMessage = 28;
	TemplateButtonReplyMessage templateButtonReplyMessage = 29;
	ProductMessage productMessage = 30;
	DeviceSentMessage deviceSentMessage = 31;
	MessageContextInfo messageContextInfo = 35;
	ListMessage listMessage = 36;
	FutureProofMessage viewOnceMessage = 37;
	OrderMessage orderMessage = 38;
	ListResponseMessage listResponseMessage = 39;
	FutureProofMessage ephemeralMessage = 40;
	InvoiceMessage invoiceMessage = 41;
	ButtonsMessage buttonsMessage = 42;
	ButtonsResponseMessage buttonsResponseMessage = 43;
	PaymentInviteMessage paymentInviteMessage = 44;
	InteractiveMessage interactiveMessage = 45;
	ReactionMessage reactionMessage = 46;
	StickerSyncRMRMessage stickerSyncRmrMessage = 47;
	InteractiveResponseMessage interactiveResponseMessage = 48;
	PollCreationMessage pollCreationMessage = 49;
	PollUpdateMessage pollUpdateMessage = 50;
	KeepInChatMessage keepInChatMessage = 51;
	FutureProofMessage documentWithCaptionMessage = 53;
	RequestPhoneNumberMessage requestPhoneNumberMessage = 54;
	FutureProofMessage viewOnceMessageV2 = 55;
	EncReactionMessage encReactionMessage = 56;
	FutureProofMessage editedMessage = 58;
	FutureProofMessage viewOnceMessageV2Extension = 59;
	PollCreationMessage pollCreationMessageV2 = 60;
	ScheduledCallCreationMessage scheduledCallCreationMessage = 61;
	FutureProofMessage groupMentionedMessage = 62;
	PinInChatMessage pinInChatMessage = 63;
	PollCreationMessage pollCreationMessageV3 = 64;
	ScheduledCallEditMessage scheduledCallEditMessage = 65;
	VideoMessage ptvMessage = 66;
	FutureProofMessage botInvokeMessage = 67;
	CallLogMessage callLogMesssage = 69;
	MessageHistoryBundle messageHistoryBundle = 70;
	EncCommentMessage encCommentMessage = 71;
	BCallMessage bcallMessage = 72;
	FutureProofMessage lottieStickerMessage = 74;
	EventMessage eventMessage = 75;
	EncEventResponseMessage encEventResponseMessage = 76;
	CommentMessage commentMessage = 77;
	NewsletterAdminInviteMessage newsletterAdminInviteMessage = 78;
	PlaceholderMessage placeholderMessage = 80;
	SecretEncryptedMessage secretEncryptedMessage = 82;
	AlbumMessage albumMessage = 83;

	enum PeerDataOperationRequestType {
		UPLOAD_STICKER = 0;
		SEND_RECENT_STICKER_BOOTSTRAP = 1;
		GENERATE_LINK_PREVIEW = 2;
		HISTORY_SYNC_ON_DEMAND = 3;
		PLACEHOLDER_MESSAGE_RESEND = 4;
		WAFFLE_LINKING_NONCE_FETCH = 5;
	}

	message AlbumMessage {
		string caption = 1;
	}

	message PlaceholderMessage {
		PlaceholderType type = 1;
	
		enum PlaceholderType {
			MASK_LINKED_DEVICES = 0;
		}
	}

	message BCallMessage {
		string sessionId = 1;
		MediaType mediaType = 2;
		bytes masterKey = 3;
		string caption = 4;
	
		enum MediaType {
			UNKNOWN = 0;
			AUDIO = 1;
			VIDEO = 2;
		}
	}

	message MessageHistoryBundle {
		string mimetype = 2;
		bytes fileSha256 = 3;
		bytes mediaKey = 5;
		bytes fileEncSha256 = 6;
		string directPath = 7;
		int64 mediaKeyTimestamp = 8;
		ContextInfo contextInfo = 9;
		repeated string participants = 10;
	}

	message CallLogMessage {
		bool isVideo = 1;
		CallOutcome callOutcome = 2;
		int64 durationSecs = 3;
		CallType callType = 4;
		repeated CallParticipant participants = 5;
	
		enum CallOutcome {
			CONNECTED = 0;
			MISSED = 1;
			FAILED = 2;
			REJECTED = 3;
			ACCEPTED_ELSEWHERE = 4;
			ONGOING = 5;
			SILENCED_BY_DND = 6;
			SILENCED_UNKNOWN_CALLER = 7;
		}
	
		enum CallType {
			REGULAR = 0;
			SCHEDULED_CALL = 1;
			VOICE_CHAT = 2;
		}
	
		message CallParticipant {
			string jid = 1;
			Message.CallLogMessage.CallOutcome callOutcome = 2;
		}
	}

	message ScheduledCallEditMessage {
		MessageKey key = 1;
		EditType editType = 2;
	
		enum EditType {
			UNKNOWN = 0;
			CANCEL = 1;
		}
	}

	message ScheduledCallCreationMessage {
		int64 scheduledTimestampMs = 1;
		CallType callType = 2;
		string title = 3;
	
		enum CallType {
			UNKNOWN = 0;
			VOICE = 1;
			VIDEO = 2;
		}
	}

	message EventResponseMessage {
		EventResponseType response = 1;
		int64 timestampMs = 2;
		int32 extraGuestCount = 3;
	
		enum EventResponseType {
			UNKNOWN = 0;
			GOING = 1;
			NOT_GOING = 2;
			MAYBE = 3;
		}
	}

	message EncEventResponseMessage {
		MessageKey eventCreationMessageKey = 1;
		bytes encPayload = 2;
		bytes encIv = 3;
	}

	message EventMessage {
		ContextInfo contextInfo = 1;
		bool isCanceled = 2;
		string name = 3;
		string description = 4;
		Message.LocationMessage location = 5;
		string joinLink = 6;
		int64 startTime = 7;
		int64 endTime = 8;
		bool extraGuestsAllowed = 9;
	}

	message CommentMessage {
		Message message = 1;
		MessageKey targetMessageKey = 2;
	}

	message EncCommentMessage {
		MessageKey targetMessageKey = 1;
		bytes encPayload = 2;
		bytes encIv = 3;
	}

	message EncReactionMessage {
		MessageKey targetMessageKey = 1;
		bytes encPayload = 2;
		bytes encIv = 3;
	}

	message PinInChatMessage {
		MessageKey key = 1;
		Type type = 2;
		int64 senderTimestampMs = 3;
	
		enum Type {
			UNKNOWN_TYPE = 0;
			PIN_FOR_ALL = 1;
			UNPIN_FOR_ALL = 2;
		}
	}

	message KeepInChatMessage {
		MessageKey key = 1;
		KeepType keepType = 2;
		int64 timestampMs = 3;
	}

	message PollVoteMessage {
		repeated bytes selectedOptions = 1;
	}

	message PollEncValue {
		bytes encPayload = 1;
		bytes encIv = 2;
	}

	message PollUpdateMessageMetadata {}

	message PollUpdateMessage {
		MessageKey pollCreationMessageKey = 1;
		Message.PollEncValue vote = 2;
		Message.PollUpdateMessageMetadata metadata = 3;
		int64 senderTimestampMs = 4;
	}

	message PollCreationMessage {
		bytes encKey = 1;
		string name = 2;
		repeated Option options = 3;
		uint32 selectableOptionsCount = 4;
		ContextInfo contextInfo = 5;
	
		message Option {
			string optionName = 1;
		}
	}

	message StickerSyncRMRMessage {
		repeated string filehash = 1;
		string rmrSource = 2;
		int64 requestTimestamp = 3;
	}

	message ReactionMessage {
		MessageKey key = 1;
		string text = 2;
		string groupingKey = 3;
		int64 senderTimestampMs = 4;
	}

	message ButtonsResponseMessage {
		string selectedButtonId = 1;
		ContextInfo contextInfo = 3;
		Type type = 4;
	
		oneof response {
			string selectedDisplayText = 2;
		}
	
		enum Type {
			UNKNOWN = 0;
			DISPLAY_TEXT = 1;
		}
	}

	message ButtonsMessage {
		string contentText = 6;
		string footerText = 7;
		ContextInfo contextInfo = 8;
		repeated Button buttons = 9;
		HeaderType headerType = 10;
	
		oneof header {
			string text = 1;
			Message.DocumentMessage documentMessage = 2;
			Message.ImageMessage imageMessage = 3;
			Message.VideoMessage videoMessage = 4;
			Message.LocationMessage locationMessage = 5;
		}
	
		enum HeaderType {
			UNKNOWN = 0;
			EMPTY = 1;
			TEXT = 2;
			DOCUMENT = 3;
			IMAGE = 4;
			VIDEO = 5;
			LOCATION = 6;
		}
	
		message Button {
			string buttonId = 1;
			ButtonText buttonText = 2;
			Type type = 3;
			NativeFlowInfo nativeFlowInfo = 4;
		
			enum Type {
				UNKNOWN = 0;
				RESPONSE = 1;
				NATIVE_FLOW = 2;
			}
		
			message NativeFlowInfo {
				string name = 1;
				string paramsJson = 2;
			}
		
			message ButtonText {
				string displayText = 1;
			}
		}
	}

	message SecretEncryptedMessage {
		MessageKey targetMessageKey = 1;
		bytes encPayload = 2;
		bytes encIv = 3;
		SecretEncType secretEncType = 4;
	
		enum SecretEncType {
			UNKNOWN = 0;
			EVENT_EDIT = 1;
		}
	}

	message FutureProofMessage {
		Message message = 1;
	}

	message DeviceSentMessage {
		string destinationJid = 1;
		Message message = 2;
		string phash = 3;
	}

	message RequestPhoneNumberMessage {
		ContextInfo contextInfo = 1;
	}

	message NewsletterAdminInviteMessage {
		string newsletterJid = 1;
		string newsletterName = 2;
		bytes jpegThumbnail = 3;
		string caption = 4;
		int64 inviteExpiration = 5;
		ContextInfo contextInfo = 6;
	}

	message GroupInviteMessage {
		string groupJid = 1;
		string inviteCode = 2;
		int64 inviteExpiration = 3;
		string groupName = 4;
		bytes jpegThumbnail = 5;
		string caption = 6;
		ContextInfo contextInfo = 7;
		GroupType groupType = 8;
	
		enum GroupType {
			DEFAULT = 0;
			PARENT = 1;
		}
	}

	message InteractiveResponseMessage {
		Body body = 1;
		ContextInfo contextInfo = 15;
	
		oneof interactiveResponseMessage {
			NativeFlowResponseMessage nativeFlowResponseMessage = 2;
		}
	
		message NativeFlowResponseMessage {
			string name = 1;
			string paramsJson = 2;
			int32 version = 3;
		}
	
		message Body {
			string text = 1;
			Format format = 2;
		
			enum Format {
				DEFAULT = 0;
				EXTENSIONS_1 = 1;
			}
		}
	}

	message InteractiveMessage {
		Header header = 1;
		Body body = 2;
		Footer footer = 3;
		ContextInfo contextInfo = 15;
	
		oneof interactiveMessage {
			ShopMessage shopStorefrontMessage = 4;
			CollectionMessage collectionMessage = 5;
			NativeFlowMessage nativeFlowMessage = 6;
			CarouselMessage carouselMessage = 7;
		}
	
		message CarouselMessage {
			repeated Message.InteractiveMessage cards = 1;
			int32 messageVersion = 2;
		}
	
		message NativeFlowMessage {
			repeated NativeFlowButton buttons = 1;
			string messageParamsJson = 2;
			int32 messageVersion = 3;
		
			message NativeFlowButton {
				string name = 1;
				string buttonParamsJson = 2;
			}
		}
	
		message CollectionMessage {
			string bizJid = 1;
			string id = 2;
			int32 messageVersion = 3;
		}
	
		message ShopMessage {
			string id = 1;
			Surface surface = 2;
			int32 messageVersion = 3;
		
			enum Surface {
				UNKNOWN_SURFACE = 0;
				FB = 1;
				IG = 2;
				WA = 3;
			}
		}
	
		message Footer {
			string text = 1;
		}
	
		message Body {
			string text = 1;
		}
	
		message Header {
			string title = 1;
			string subtitle = 2;
			bool hasMediaAttachment = 5;
		
			oneof media {
				Message.DocumentMessage documentMessage = 3;
				Message.ImageMessage imageMessage = 4;
				bytes jpegThumbnail = 6;
				Message.VideoMessage videoMessage = 7;
				Message.LocationMessage locationMessage = 8;
				Message.ProductMessage productMessage = 9;
			}
		}
	}

	message ListResponseMessage {
		string title = 1;
		ListType listType = 2;
		SingleSelectReply singleSelectReply = 3;
		ContextInfo contextInfo = 4;
		string description = 5;
	
		enum ListType {
			UNKNOWN = 0;
			SINGLE_SELECT = 1;
		}
	
		message SingleSelectReply {
			string selectedRowId = 1;
		}
	}

	message ListMessage {
		string title = 1;
		string description = 2;
		string buttonText = 3;
		ListType listType = 4;
		repeated Section sections = 5;
		ProductListInfo productListInfo = 6;
		string footerText = 7;
		ContextInfo contextInfo = 8;
	
		enum ListType {
			UNKNOWN = 0;
			SINGLE_SELECT = 1;
			PRODUCT_LIST = 2;
		}
	
		message ProductListInfo {
			repeated Message.ListMessage.ProductSection productSections = 1;
			Message.ListMessage.ProductListHeaderImage headerImage = 2;
			string businessOwnerJid = 3;
		}
	
		message ProductListHeaderImage {
			string productId = 1;
			bytes jpegThumbnail = 2;
		}
	
		message ProductSection {
			string title = 1;
			repeated Message.ListMessage.Product products = 2;
		}
	
		message Product {
			string productId = 1;
		}
	
		message Section {
			string title = 1;
			repeated Message.ListMessage.Row rows = 2;
		}
	
		message Row {
			string title = 1;
			string description = 2;
			string rowId = 3;
		}
	}

	message OrderMessage {
		string orderId = 1;
		bytes thumbnail = 2;
		int32 itemCount = 3;
		OrderStatus status = 4;
		OrderSurface surface = 5;
		string message = 6;
		string orderTitle = 7;
		string sellerJid = 8;
		string token = 9;
		int64 totalAmount1000 = 10;
		string totalCurrencyCode = 11;
		ContextInfo contextInfo = 17;
		int32 messageVersion = 12;
		MessageKey orderRequestMessageId = 13;
	
		enum OrderSurface {
			CATALOG = 1;
		}
	
		enum OrderStatus {
			INQUIRY = 1;
			ACCEPTED = 2;
			DECLINED = 3;
		}
	}

	message ProductMessage {
		ProductSnapshot product = 1;
		string businessOwnerJid = 2;
		CatalogSnapshot catalog = 4;
		string body = 5;
		string footer = 6;
		ContextInfo contextInfo = 17;
	
		message ProductSnapshot {
			Message.ImageMessage productImage = 1;
			string productId = 2;
			string title = 3;
			string description = 4;
			string currencyCode = 5;
			int64 priceAmount1000 = 6;
			string retailerId = 7;
			string url = 8;
			uint32 productImageCount = 9;
			string firstImageId = 11;
			int64 salePriceAmount1000 = 12;
		}
	
		message CatalogSnapshot {
			Message.ImageMessage catalogImage = 1;
			string title = 2;
			string description = 3;
		}
	}

	message TemplateButtonReplyMessage {
		string selectedId = 1;
		string selectedDisplayText = 2;
		ContextInfo contextInfo = 3;
		uint32 selectedIndex = 4;
		uint32 selectedCarouselCardIndex = 5;
	}

	message TemplateMessage {
		ContextInfo contextInfo = 3;
		HydratedFourRowTemplate hydratedTemplate = 4;
		string templateId = 9;
	
		oneof format {
			FourRowTemplate fourRowTemplate = 1;
			HydratedFourRowTemplate hydratedFourRowTemplate = 2;
			Message.InteractiveMessage interactiveMessageTemplate = 5;
		}
	
		message HydratedFourRowTemplate {
			string hydratedContentText = 6;
			string hydratedFooterText = 7;
			repeated HydratedTemplateButton hydratedButtons = 8;
			string templateId = 9;
			bool maskLinkedDevices = 10;
		
			oneof title {
				Message.DocumentMessage documentMessage = 1;
				string hydratedTitleText = 2;
				Message.ImageMessage imageMessage = 3;
				Message.VideoMessage videoMessage = 4;
				Message.LocationMessage locationMessage = 5;
			}
		}
	
		message FourRowTemplate {
			Message.HighlyStructuredMessage content = 6;
			Message.HighlyStructuredMessage footer = 7;
			repeated TemplateButton buttons = 8;
		
			oneof title {
				Message.DocumentMessage documentMessage = 1;
				Message.HighlyStructuredMessage highlyStructuredMessage = 2;
				Message.ImageMessage imageMessage = 3;
				Message.VideoMessage videoMessage = 4;
				Message.LocationMessage locationMessage = 5;
			}
		}
	}

	message StickerMessage {
		string url = 1;
		bytes fileSha256 = 2;
		bytes fileEncSha256 = 3;
		bytes mediaKey = 4;
		string mimetype = 5;
		uint32 height = 6;
		uint32 width = 7;
		string directPath = 8;
		uint64 fileLength = 9;
		int64 mediaKeyTimestamp = 10;
		uint32 firstFrameLength = 11;
		bytes firstFrameSidecar = 12;
		bool isAnimated = 13;
		bytes pngThumbnail = 16;
		ContextInfo contextInfo = 17;
		int64 stickerSentTs = 18;
		bool isAvatar = 19;
		bool isAiSticker = 20;
		bool isLottie = 21;
		string accessibilityLabel = 22;
	}

	message LiveLocationMessage {
		double degreesLatitude = 1;
		double degreesLongitude = 2;
		uint32 accuracyInMeters = 3;
		float speedInMps = 4;
		uint32 degreesClockwiseFromMagneticNorth = 5;
		string caption = 6;
		int64 sequenceNumber = 7;
		uint32 timeOffset = 8;
		bytes jpegThumbnail = 16;
		ContextInfo contextInfo = 17;
	}

	message PaymentInviteMessage {
		ServiceType serviceType = 1;
		int64 expiryTimestamp = 2;
	
		enum ServiceType {
			UNKNOWN = 0;
			FBPAY = 1;
			NOVI = 2;
			UPI = 3;
		}
	}

	message CancelPaymentRequestMessage {
		MessageKey key = 1;
	}

	message DeclinePaymentRequestMessage {
		MessageKey key = 1;
	}

	message RequestPaymentMessage {
		Message noteMessage = 4;
		string currencyCodeIso4217 = 1;
		uint64 amount1000 = 2;
		string requestFrom = 3;
		int64 expiryTimestamp = 5;
		Money amount = 6;
		PaymentBackground background = 7;
	}

	message SendPaymentMessage {
		Message noteMessage = 2;
		MessageKey requestMessageKey = 3;
		PaymentBackground background = 4;
	}

	message HighlyStructuredMessage {
		string namespace = 1;
		string elementName = 2;
		repeated string params = 3;
		string fallbackLg = 4;
		string fallbackLc = 5;
		repeated HSMLocalizableParameter localizableParams = 6;
		string deterministicLg = 7;
		string deterministicLc = 8;
		Message.TemplateMessage hydratedHsm = 9;
	
		message HSMLocalizableParameter {
			string default = 1;
		
			oneof paramOneof {
				HSMCurrency currency = 2;
				HSMDateTime dateTime = 3;
			}
		
			message HSMDateTime {
				oneof datetimeOneof {
					HSMDateTimeComponent component = 1;
					HSMDateTimeUnixEpoch unixEpoch = 2;
				}
			
				message HSMDateTimeUnixEpoch {
					int64 timestamp = 1;
				}
			
				message HSMDateTimeComponent {
					DayOfWeekType dayOfWeek = 1;
					uint32 year = 2;
					uint32 month = 3;
					uint32 dayOfMonth = 4;
					uint32 hour = 5;
					uint32 minute = 6;
					CalendarType calendar = 7;
				
					enum CalendarType {
						GREGORIAN = 1;
						SOLAR_HIJRI = 2;
					}
				
					enum DayOfWeekType {
						MONDAY = 1;
						TUESDAY = 2;
						WEDNESDAY = 3;
						THURSDAY = 4;
						FRIDAY = 5;
						SATURDAY = 6;
						SUNDAY = 7;
					}
				}
			}
		
			message HSMCurrency {
				string currencyCode = 1;
				int64 amount1000 = 2;
			}
		}
	}

	message ContactsArrayMessage {
		string displayName = 1;
		repeated Message.ContactMessage contacts = 2;
		ContextInfo contextInfo = 17;
	}

	message InitialSecurityNotificationSettingSync {
		bool securityNotificationEnabled = 1;
	}

	message PeerDataOperationRequestResponseMessage {
		Message.PeerDataOperationRequestType peerDataOperationRequestType = 1;
		string stanzaId = 2;
		repeated PeerDataOperationResult peerDataOperationResult = 3;
	
		message PeerDataOperationResult {
			MediaRetryNotification.ResultType mediaUploadResult = 1;
			Message.StickerMessage stickerMessage = 2;
			LinkPreviewResponse linkPreviewResponse = 3;
			PlaceholderMessageResendResponse placeholderMessageResendResponse = 4;
			WaffleNonceFetchResponse waffleNonceFetchRequestResponse = 5;
		
			message WaffleNonceFetchResponse {
				string nonce = 1;
				string waEntFbid = 2;
			}
		
			message PlaceholderMessageResendResponse {
				bytes webMessageInfoBytes = 1;
			}
		
			message LinkPreviewResponse {
				string url = 1;
				string title = 2;
				string description = 3;
				bytes thumbData = 4;
				string canonicalUrl = 5;
				string matchText = 6;
				string previewType = 7;
				LinkPreviewHighQualityThumbnail hqThumbnail = 8;
			
				message LinkPreviewHighQualityThumbnail {
					string directPath = 1;
					string thumbHash = 2;
					string encThumbHash = 3;
					bytes mediaKey = 4;
					int64 mediaKeyTimestampMs = 5;
					int32 thumbWidth = 6;
					int32 thumbHeight = 7;
				}
			}
		}
	}

	message PeerDataOperationRequestMessage {
		Message.PeerDataOperationRequestType peerDataOperationRequestType = 1;
		repeated RequestStickerReupload requestStickerReupload = 2;
		repeated RequestUrlPreview requestUrlPreview = 3;
		HistorySyncOnDemandRequest historySyncOnDemandRequest = 4;
		repeated PlaceholderMessageResendRequest placeholderMessageResendRequest = 5;
	
		message PlaceholderMessageResendRequest {
			MessageKey messageKey = 1;
		}
	
		message HistorySyncOnDemandRequest {
			string chatJid = 1;
			string oldestMsgId = 2;
			bool oldestMsgFromMe = 3;
			int32 onDemandMsgCount = 4;
			int64 oldestMsgTimestampMs = 5;
		}
	
		message RequestUrlPreview {
			string url = 1;
			bool includeHqThumbnail = 2;
		}
	
		message RequestStickerReupload {
			string fileSha256 = 1;
		}
	}

	message AppStateFatalExceptionNotification {
		repeated string collectionNames = 1;
		int64 timestamp = 2;
	}

	message AppStateSyncKeyRequest {
		repeated Message.AppStateSyncKeyId keyIds = 1;
	}

	message AppStateSyncKeyShare {
		repeated Message.AppStateSyncKey keys = 1;
	}

	message AppStateSyncKeyData {
		bytes keyData = 1;
		Message.AppStateSyncKeyFingerprint fingerprint = 2;
		int64 timestamp = 3;
	}

	message AppStateSyncKeyFingerprint {
		uint32 rawId = 1;
		uint32 currentIndex = 2;
		repeated uint32 deviceIndexes = 3 [packed=true];
	}

	message AppStateSyncKeyId {
		bytes keyId = 1;
	}

	message AppStateSyncKey {
		Message.AppStateSyncKeyId keyId = 1;
		Message.AppStateSyncKeyData keyData = 2;
	}

	message HistorySyncNotification {
		bytes fileSha256 = 1;
		uint64 fileLength = 2;
		bytes mediaKey = 3;
		bytes fileEncSha256 = 4;
		string directPath = 5;
		HistorySyncType syncType = 6;
		uint32 chunkOrder = 7;
		string originalMessageId = 8;
		uint32 progress = 9;
		int64 oldestMsgInChunkTimestampSec = 10;
		bytes initialHistBootstrapInlinePayload = 11;
		string peerDataRequestSessionId = 12;
	
		enum HistorySyncType {
			INITIAL_BOOTSTRAP = 0;
			INITIAL_STATUS_V3 = 1;
			FULL = 2;
			RECENT = 3;
			PUSH_NAME = 4;
			NON_BLOCKING_DATA = 5;
			ON_DEMAND = 6;
			NO_HISTORY = 7;
		}
	}

	message RequestWelcomeMessageMetadata {
		LocalChatState localChatState = 1;
	
		enum LocalChatState {
			EMPTY = 0;
			NON_EMPTY = 1;
		}
	}

	message ProtocolMessage {
		MessageKey key = 1;
		Type type = 2;
		uint32 ephemeralExpiration = 4;
		int64 ephemeralSettingTimestamp = 5;
		Message.HistorySyncNotification historySyncNotification = 6;
		Message.AppStateSyncKeyShare appStateSyncKeyShare = 7;
		Message.AppStateSyncKeyRequest appStateSyncKeyRequest = 8;
		Message.InitialSecurityNotificationSettingSync initialSecurityNotificationSettingSync = 9;
		Message.AppStateFatalExceptionNotification appStateFatalExceptionNotification = 10;
		DisappearingMode disappearingMode = 11;
		Message editedMessage = 14;
		int64 timestampMs = 15;
		Message.PeerDataOperationRequestMessage peerDataOperationRequestMessage = 16;
		Message.PeerDataOperationRequestResponseMessage peerDataOperationRequestResponseMessage = 17;
		Message.BotFeedbackMessage botFeedbackMessage = 18;
		string invokerJid = 19;
		Message.RequestWelcomeMessageMetadata requestWelcomeMessageMetadata = 20;
		MediaNotifyMessage mediaNotifyMessage = 21;
		Message.CloudAPIThreadControlNotification cloudApiThreadControlNotification = 22;
		LIDMigrationMappingSyncMessage lidMigrationMappingSyncMessage = 23;
	
		enum Type {
			REVOKE = 0;
			EPHEMERAL_SETTING = 3;
			EPHEMERAL_SYNC_RESPONSE = 4;
			HISTORY_SYNC_NOTIFICATION = 5;
			APP_STATE_SYNC_KEY_SHARE = 6;
			APP_STATE_SYNC_KEY_REQUEST = 7;
			MSG_FANOUT_BACKFILL_REQUEST = 8;
			INITIAL_SECURITY_NOTIFICATION_SETTING_SYNC = 9;
			APP_STATE_FATAL_EXCEPTION_NOTIFICATION = 10;
			SHARE_PHONE_NUMBER = 11;
			MESSAGE_EDIT = 14;
			PEER_DATA_OPERATION_REQUEST_MESSAGE = 16;
			PEER_DATA_OPERATION_REQUEST_RESPONSE_MESSAGE = 17;
			REQUEST_WELCOME_MESSAGE = 18;
			BOT_FEEDBACK_MESSAGE = 19;
			MEDIA_NOTIFY_MESSAGE = 20;
			CLOUD_API_THREAD_CONTROL_NOTIFICATION = 21;
			LID_MIGRATION_MAPPING_SYNC = 22;
		}
	}

	message CloudAPIThreadControlNotification {
		CloudAPIThreadControl status = 1;
		int64 senderNotificationTimestampMs = 2;
		string consumerLid = 3;
		string consumerPhoneNumber = 4;
	
		enum CloudAPIThreadControl {
			UNKNOWN = 0;
			CONTROL_PASSED = 1;
			CONTROL_TAKEN = 2;
		}
	}

	message BotFeedbackMessage {
		MessageKey messageKey = 1;
		BotFeedbackKind kind = 2;
		string text = 3;
		uint64 kindNegative = 4;
		uint64 kindPositive = 5;
		ReportKind kindReport = 6;
	
		enum ReportKind {
			GENERIC = 0;
		}
	
		enum BotFeedbackKindMultiplePositive {
			BOT_FEEDBACK_MULTIPLE_POSITIVE_GENERIC = 1;
		}
	
		enum BotFeedbackKindMultipleNegative {
			BOT_FEEDBACK_MULTIPLE_NEGATIVE_GENERIC = 1;
			BOT_FEEDBACK_MULTIPLE_NEGATIVE_HELPFUL = 2;
			BOT_FEEDBACK_MULTIPLE_NEGATIVE_INTERESTING = 4;
			BOT_FEEDBACK_MULTIPLE_NEGATIVE_ACCURATE = 8;
			BOT_FEEDBACK_MULTIPLE_NEGATIVE_SAFE = 16;
			BOT_FEEDBACK_MULTIPLE_NEGATIVE_OTHER = 32;
			BOT_FEEDBACK_MULTIPLE_NEGATIVE_REFUSED = 64;
			BOT_FEEDBACK_MULTIPLE_NEGATIVE_NOT_VISUALLY_APPEALING = 128;
			BOT_FEEDBACK_MULTIPLE_NEGATIVE_NOT_RELEVANT_TO_TEXT = 256;
		}
	
		enum BotFeedbackKind {
			BOT_FEEDBACK_POSITIVE = 0;
			BOT_FEEDBACK_NEGATIVE_GENERIC = 1;
			BOT_FEEDBACK_NEGATIVE_HELPFUL = 2;
			BOT_FEEDBACK_NEGATIVE_INTERESTING = 3;
			BOT_FEEDBACK_NEGATIVE_ACCURATE = 4;
			BOT_FEEDBACK_NEGATIVE_SAFE = 5;
			BOT_FEEDBACK_NEGATIVE_OTHER = 6;
			BOT_FEEDBACK_NEGATIVE_REFUSED = 7;
			BOT_FEEDBACK_NEGATIVE_NOT_VISUALLY_APPEALING = 8;
			BOT_FEEDBACK_NEGATIVE_NOT_RELEVANT_TO_TEXT = 9;
		}
	}

	message Chat {
		string displayName = 1;
		string id = 2;
	}

	message Call {
		bytes callKey = 1;
		string conversionSource = 2;
		bytes conversionData = 3;
		uint32 conversionDelaySeconds = 4;
	}

	message VideoMessage {
		string url = 1;
		string mimetype = 2;
		bytes fileSha256 = 3;
		uint64 fileLength = 4;
		uint32 seconds = 5;
		bytes mediaKey = 6;
		string caption = 7;
		bool gifPlayback = 8;
		uint32 height = 9;
		uint32 width = 10;
		bytes fileEncSha256 = 11;
		repeated InteractiveAnnotation interactiveAnnotations = 12;
		string directPath = 13;
		int64 mediaKeyTimestamp = 14;
		bytes jpegThumbnail = 16;
		ContextInfo contextInfo = 17;
		bytes streamingSidecar = 18;
		Attribution gifAttribution = 19;
		bool viewOnce = 20;
		string thumbnailDirectPath = 21;
		bytes thumbnailSha256 = 22;
		bytes thumbnailEncSha256 = 23;
		string staticUrl = 24;
		repeated InteractiveAnnotation annotations = 25;
		string accessibilityLabel = 26;
		repeated ProcessedVideo processedVideos = 27;
	
		enum Attribution {
			NONE = 0;
			GIPHY = 1;
			TENOR = 2;
		}
	}

	message AudioMessage {
		string url = 1;
		string mimetype = 2;
		bytes fileSha256 = 3;
		uint64 fileLength = 4;
		uint32 seconds = 5;
		bool ptt = 6;
		bytes mediaKey = 7;
		bytes fileEncSha256 = 8;
		string directPath = 9;
		int64 mediaKeyTimestamp = 10;
		ContextInfo contextInfo = 17;
		bytes streamingSidecar = 18;
		bytes waveform = 19;
		fixed32 backgroundArgb = 20;
		bool viewOnce = 21;
		string accessibilityLabel = 22;
	}

	message DocumentMessage {
		string url = 1;
		string mimetype = 2;
		string title = 3;
		bytes fileSha256 = 4;
		uint64 fileLength = 5;
		uint32 pageCount = 6;
		bytes mediaKey = 7;
		string fileName = 8;
		bytes fileEncSha256 = 9;
		string directPath = 10;
		int64 mediaKeyTimestamp = 11;
		bool contactVcard = 12;
		string thumbnailDirectPath = 13;
		bytes thumbnailSha256 = 14;
		bytes thumbnailEncSha256 = 15;
		bytes jpegThumbnail = 16;
		ContextInfo contextInfo = 17;
		uint32 thumbnailHeight = 18;
		uint32 thumbnailWidth = 19;
		string caption = 20;
		string accessibilityLabel = 21;
	}

	message ExtendedTextMessage {
		string text = 1;
		string matchedText = 2;
		string canonicalUrl = 4;
		string description = 5;
		string title = 6;
		fixed32 textArgb = 7;
		fixed32 backgroundArgb = 8;
		FontType font = 9;
		PreviewType previewType = 10;
		bytes jpegThumbnail = 16;
		ContextInfo contextInfo = 17;
		bool doNotPlayInline = 18;
		string thumbnailDirectPath = 19;
		bytes thumbnailSha256 = 20;
		bytes thumbnailEncSha256 = 21;
		bytes mediaKey = 22;
		int64 mediaKeyTimestamp = 23;
		uint32 thumbnailHeight = 24;
		uint32 thumbnailWidth = 25;
		InviteLinkGroupType inviteLinkGroupType = 26;
		string inviteLinkParentGroupSubjectV2 = 27;
		bytes inviteLinkParentGroupThumbnailV2 = 28;
		InviteLinkGroupType inviteLinkGroupTypeV2 = 29;
		bool viewOnce = 30;
		uint32 videoHeight = 31;
		uint32 videoWidth = 32;
	
		enum InviteLinkGroupType {
			DEFAULT = 0;
			PARENT = 1;
			SUB = 2;
			DEFAULT_SUB = 3;
		}
	
		enum PreviewType {
			NONE = 0;
			VIDEO = 1;
			PLACEHOLDER = 4;
			IMAGE = 5;
			PAYMENT_LINKS = 6;
		}
	
		enum FontType {
			SYSTEM = 0;
			SYSTEM_TEXT = 1;
			FB_SCRIPT = 2;
			SYSTEM_BOLD = 6;
			MORNINGBREEZE_REGULAR = 7;
			CALISTOGA_REGULAR = 8;
			EXO2_EXTRABOLD = 9;
			COURIERPRIME_BOLD = 10;
		}
	}

	message LocationMessage {
		double degreesLatitude = 1;
		double degreesLongitude = 2;
		string name = 3;
		string address = 4;
		string url = 5;
		bool isLive = 6;
		uint32 accuracyInMeters = 7;
		float speedInMps = 8;
		uint32 degreesClockwiseFromMagneticNorth = 9;
		string comment = 11;
		bytes jpegThumbnail = 16;
		ContextInfo contextInfo = 17;
	}

	message ContactMessage {
		string displayName = 1;
		string vcard = 16;
		ContextInfo contextInfo = 17;
	}

	message InvoiceMessage {
		string note = 1;
		string token = 2;
		AttachmentType attachmentType = 3;
		string attachmentMimetype = 4;
		bytes attachmentMediaKey = 5;
		int64 attachmentMediaKeyTimestamp = 6;
		bytes attachmentFileSha256 = 7;
		bytes attachmentFileEncSha256 = 8;
		string attachmentDirectPath = 9;
		bytes attachmentJpegThumbnail = 10;
	
		enum AttachmentType {
			IMAGE = 0;
			PDF = 1;
		}
	}

	message ImageMessage {
		string url = 1;
		string mimetype = 2;
		string caption = 3;
		bytes fileSha256 = 4;
		uint64 fileLength = 5;
		uint32 height = 6;
		uint32 width = 7;
		bytes mediaKey = 8;
		bytes fileEncSha256 = 9;
		repeated InteractiveAnnotation interactiveAnnotations = 10;
		string directPath = 11;
		int64 mediaKeyTimestamp = 12;
		bytes jpegThumbnail = 16;
		ContextInfo contextInfo = 17;
		bytes firstScanSidecar = 18;
		uint32 firstScanLength = 19;
		uint32 experimentGroupId = 20;
		bytes scansSidecar = 21;
		repeated uint32 scanLengths = 22;
		bytes midQualityFileSha256 = 23;
		bytes midQualityFileEncSha256 = 24;
		bool viewOnce = 25;
		string thumbnailDirectPath = 26;
		bytes thumbnailSha256 = 27;
		bytes thumbnailEncSha256 = 28;
		string staticUrl = 29;
		repeated InteractiveAnnotation annotations = 30;
		ImageSourceType imageSourceType = 31;
		string accessibilityLabel = 32;
	
		enum ImageSourceType {
			USER_IMAGE = 0;
			AI_GENERATED = 1;
			AI_MODIFIED = 2;
		}
	}

	message SenderKeyDistributionMessage {
		string groupId = 1;
		bytes axolotlSenderKeyDistributionMessage = 2;
	}
}

message ContextInfo {
	string stanzaId = 1;
	string participant = 2;
	Message quotedMessage = 3;
	string remoteJid = 4;
	repeated string mentionedJid = 15;
	string conversionSource = 18;
	bytes conversionData = 19;
	uint32 conversionDelaySeconds = 20;
	uint32 forwardingScore = 21;
	bool isForwarded = 22;
	AdReplyInfo quotedAd = 23;
	MessageKey placeholderKey = 24;
	uint32 expiration = 25;
	int64 ephemeralSettingTimestamp = 26;
	bytes ephemeralSharedSecret = 27;
	ExternalAdReplyInfo externalAdReply = 28;
	string entryPointConversionSource = 29;
	string entryPointConversionApp = 30;
	uint32 entryPointConversionDelaySeconds = 31;
	DisappearingMode disappearingMode = 32;
	ActionLink actionLink = 33;
	string groupSubject = 34;
	string parentGroupJid = 35;
	string trustBannerType = 37;
	uint32 trustBannerAction = 38;
	bool isSampled = 39;
	repeated GroupMention groupMentions = 40;
	UTMInfo utm = 41;
	ForwardedNewsletterMessageInfo forwardedNewsletterMessageInfo = 43;
	BusinessMessageForwardInfo businessMessageForwardInfo = 44;
	string smbClientCampaignId = 45;
	string smbServerCampaignId = 46;
	DataSharingContext dataSharingContext = 47;
	bool alwaysShowAdAttribution = 48;
	FeatureEligibilities featureEligibilities = 49;

	message FeatureEligibilities {
		bool cannotBeReactedTo = 1;
		bool canRequestFeedback = 2;
	}

	message DataSharingContext {
		bool showMmDisclosure = 1;
	}

	message ForwardedNewsletterMessageInfo {
		string newsletterJid = 1;
		int32 serverMessageId = 2;
		string newsletterName = 3;
		ContentType contentType = 4;
		string accessibilityText = 5;
	
		enum ContentType {
			UPDATE = 1;
			UPDATE_CARD = 2;
			LINK_CARD = 3;
		}
	}

	message UTMInfo {
		string utmSource = 1;
		string utmCampaign = 2;
	}

	message ExternalAdReplyInfo {
		string title = 1;
		string body = 2;
		MediaType mediaType = 3;
		string thumbnailUrl = 4;
		string mediaUrl = 5;
		bytes thumbnail = 6;
		string sourceType = 7;
		string sourceId = 8;
		string sourceUrl = 9;
		bool containsAutoReply = 10;
		bool renderLargerThumbnail = 11;
		bool showAdAttribution = 12;
		string ctwaClid = 13;
		string ref = 14;
	
		enum MediaType {
			NONE = 0;
			IMAGE = 1;
			VIDEO = 2;
		}
	}

	message AdReplyInfo {
		string advertiserName = 1;
		MediaType mediaType = 2;
		bytes jpegThumbnail = 16;
		string caption = 17;
	
		enum MediaType {
			NONE = 0;
			IMAGE = 1;
			VIDEO = 2;
		}
	}

	message BusinessMessageForwardInfo {
		string businessOwnerJid = 1;
	}
}

message BotAvatarMetadata {
	uint32 sentiment = 1;
	string behaviorGraph = 2;
	uint32 action = 3;
	uint32 intensity = 4;
	uint32 wordCount = 5;
}

message BotPluginMetadata {
	SearchProvider provider = 1;
	PluginType pluginType = 2;
	string thumbnailCdnUrl = 3;
	string profilePhotoCdnUrl = 4;
	string searchProviderUrl = 5;
	uint32 referenceIndex = 6;
	uint32 expectedLinksCount = 7;
	string searchQuery = 9;
	MessageKey parentPluginMessageKey = 10;
	PluginType parentPluginType = 11;

	enum PluginType {
		REELS = 1;
		SEARCH = 2;
	}

	enum SearchProvider {
		BING = 1;
		GOOGLE = 2;
	}
}

message BotSuggestedPromptMetadata {
	repeated string suggestedPrompts = 1;
	uint32 selectedPromptIndex = 2;
}

message BotSearchMetadata {
	string sessionId = 1;
	SessionSource sessionSource = 2;

	enum SessionSource {
		NULL_STATE = 1;
		TYPEAHEAD = 2;
		USER_INPUT = 3;
		EMU_FLASH = 4;
		EMU_FLASH_FOLLOWUP = 5;
	}
}

message BotMediaMetadata {
	bytes fileSha256 = 1;
	bytes mediaKey = 2;
	bytes fileEncSha256 = 3;
	string directPath = 4;
	int64 mediaKeyTimestamp = 5;
	string mimetype = 6;
}

message BotMemuMetadata {
	repeated BotMediaMetadata faceImages = 1;
}

message BotMetadata {
	BotAvatarMetadata avatarMetadata = 1;
	string personaId = 2;
	BotPluginMetadata pluginMetadata = 3;
	BotSuggestedPromptMetadata suggestedPromptMetadata = 4;
	string invokerJid = 5;
	BotSearchMetadata searchMetadata = 6;
	BotMemuMetadata memuMetadata = 7;
}

message MessageAssociation {
	AssociationType associationType = 1;
	MessageKey parentMessageKey = 2;

	enum AssociationType {
		MEDIA_ALBUM = 1;
		BOT_PLUGIN = 2;
		EVENT_COVER_IMAGE = 3;
	}
}

message MessageContextInfo {
	DeviceListMetadata deviceListMetadata = 1;
	int32 deviceListMetadataVersion = 2;
	bytes messageSecret = 3;
	bytes paddingBytes = 4;
	uint32 messageAddOnDurationInSecs = 5;
	bytes botMessageSecret = 6;
	BotMetadata botMetadata = 7;
	int32 reportingTokenVersion = 8;
	MessageAddonExpiryType messageAddOnExpiryType = 9;
	MessageAssociation messageAssociation = 10;

	enum MessageAddonExpiryType {
		STATIC = 1;
		DEPENDENT_ON_PARENT = 2;
	}
}

message DeviceListMetadata {
	bytes senderKeyHash = 1;
	uint64 senderTimestamp = 2;
	repeated uint32 senderKeyIndexes = 3 [packed=true];
	ADVEncryptionType senderAccountType = 4;
	ADVEncryptionType receiverAccountType = 5;
	bytes recipientKeyHash = 8;
	uint64 recipientTimestamp = 9;
	repeated uint32 recipientKeyIndexes = 10 [packed=true];
}

message InteractiveAnnotation {
	repeated Point polygonVertices = 1;
	bool shouldSkipConfirmation = 4;

	oneof action {
		Location location = 2;
		ContextInfo.ForwardedNewsletterMessageInfo newsletter = 3;
	}
}

message Point {
	int32 xDeprecated = 1;
	int32 yDeprecated = 2;
	double x = 3;
	double y = 4;
}

message Location {
	double degreesLatitude = 1;
	double degreesLongitude = 2;
	string name = 3;
}

message TemplateButton {
	uint32 index = 4;

	oneof button {
		QuickReplyButton quickReplyButton = 1;
		URLButton urlButton = 2;
		CallButton callButton = 3;
	}

	message CallButton {
		Message.HighlyStructuredMessage displayText = 1;
		Message.HighlyStructuredMessage phoneNumber = 2;
	}

	message URLButton {
		Message.HighlyStructuredMessage displayText = 1;
		Message.HighlyStructuredMessage url = 2;
	}

	message QuickReplyButton {
		Message.HighlyStructuredMessage displayText = 1;
		string id = 2;
	}
}

message HydratedTemplateButton {
	uint32 index = 4;

	oneof hydratedButton {
		HydratedQuickReplyButton quickReplyButton = 1;
		HydratedURLButton urlButton = 2;
		HydratedCallButton callButton = 3;
	}

	message HydratedCallButton {
		string displayText = 1;
		string phoneNumber = 2;
	}

	message HydratedURLButton {
		string displayText = 1;
		string url = 2;
		string consentedUsersUrl = 3;
		WebviewPresentationType webviewPresentation = 4;
	
		enum WebviewPresentationType {
			FULL = 1;
			TALL = 2;
			COMPACT = 3;
		}
	}

	message HydratedQuickReplyButton {
		string displayText = 1;
		string id = 2;
	}
}

message Money {
	int64 value = 1;
	uint32 offset = 2;
	string currencyCode = 3;
}

message PaymentBackground {
	string id = 1;
	uint64 fileLength = 2;
	uint32 width = 3;
	uint32 height = 4;
	string mimetype = 5;
	fixed32 placeholderArgb = 6;
	fixed32 textArgb = 7;
	fixed32 subtextArgb = 8;
	MediaData mediaData = 9;
	Type type = 10;

	enum Type {
		UNKNOWN = 0;
		DEFAULT = 1;
	}

	message MediaData {
		bytes mediaKey = 1;
		int64 mediaKeyTimestamp = 2;
		bytes fileSha256 = 3;
		bytes fileEncSha256 = 4;
		string directPath = 5;
	}
}

message DisappearingMode {
	Initiator initiator = 1;
	Trigger trigger = 2;
	string initiatorDeviceJid = 3;
	bool initiatedByMe = 4;

	enum Trigger {
		UNKNOWN = 0;
		CHAT_SETTING = 1;
		ACCOUNT_SETTING = 2;
		BULK_CHANGE = 3;
		BIZ_SUPPORTS_FB_HOSTING = 4;
	}

	enum Initiator {
		CHANGED_IN_CHAT = 0;
		INITIATED_BY_ME = 1;
		INITIATED_BY_OTHER = 2;
		BIZ_UPGRADE_FB_HOSTING = 3;
	}
}

message ActionLink {
	string url = 1;
	string buttonTitle = 2;
}

message GroupMention {
	string groupJid = 1;
	string groupSubject = 2;
}

message MessageSecretMessage {
	sfixed32 version = 1;
	bytes encIv = 2;
	bytes encPayload = 3;
}

message MediaNotifyMessage {
	string expressPathUrl = 1;
	bytes fileEncSha256 = 2;
	uint64 fileLength = 3;
}

message LIDMigrationMappingSyncMessage {
	bytes encodedMappingPayload = 1;
}

message ProcessedVideo {
	string directPath = 1;
	bytes fileSha256 = 2;
	uint32 height = 3;
	uint32 width = 4;
	uint64 fileLength = 5;
	uint32 bitrate = 6;
	VideoQuality quality = 7;
	repeated string capabilities = 8;

	enum VideoQuality {
		UNDEFINED = 0;
		LOW = 1;
		MID = 2;
		HIGH = 3;
	}
}