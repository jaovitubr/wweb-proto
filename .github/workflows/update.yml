name: Check for updates

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 20
          registry-url: "https://registry.npmjs.org"
          cache-dependency-path: tools/scraper/package-lock.json

      - name: Set up environment
        run: |
          mkdir -p out/packages

          [ -r out/proto/.version ] && WA_VERSION=$(cat out/proto/.version)
          [ -r out/proto/.md5 ] && WA_PROTO_MD5=$(cat out/proto/.md5)

          echo "WA_VERSION=$WA_VERSION" >> $GITHUB_ENV
          echo "WA_PROTO_MD5=$WA_PROTO_MD5" >> $GITHUB_ENV

          echo "Current WhatsApp Web version: $WA_VERSION"
          echo "Current proto md5: $WA_PROTO_MD5"

      - name: Install scraper dependencies
        run: |
          cd tools/scraper
          npm install

      - name: Scrap proto files
        run: |
          node tools/scraper

          NEWEST_WA_VERSION=$(cat out/proto/.version)
          NEWEST_WA_PROTO_MD5=$(cat out/proto/.md5)

          echo "NEWEST_WA_VERSION=$NEWEST_WA_VERSION" >> $GITHUB_ENV
          echo "NEWEST_WA_PROTO_MD5=$NEWEST_WA_PROTO_MD5" >> $GITHUB_ENV

          echo "Newest WhatsApp Web version: $NEWEST_WA_VERSION"
          echo "Newest proto md5: $NEWEST_WA_PROTO_MD5"
        env:
          OUT_DIR: ${{ github.workspace }}/out/proto

      - name: Check if package update is needed
        run: |
          if [[ "${{ env.WA_PROTO_MD5 }}" == "${{ env.NEWEST_WA_PROTO_MD5 }}" ]]; then
            echo "Proto md5 are the same."
          elif [[ "${{ env.WA_VERSION }}" == "${{ env.NEWEST_WA_VERSION }}" ]]; then
            echo "WhatsApp Web version are the same."
          else
            echo "Versions are different."
            echo "package_update_needed=true" >> $GITHUB_ENV
          fi

      - name: Install packager dependencies
        if: env.package_update_needed == 'true'
        run: |
          sudo apt-get install -y protobuf-compiler
          npm install -g @bufbuild/protobuf@2.2.3 @bufbuild/protoc-gen-es typescript uglify-js

      - name: Generate packages
        if: env.package_update_needed == 'true'
        run: bash generate.sh
        working-directory: tools/packager
        env:
          OUT_DIR: ${{ github.workspace }}/out

      - name: Upload artifacts
        if: env.package_update_needed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: out
          path: |
            out
            !node_modules
      - name: Publish packages
        if: env.package_update_needed == 'true'
        run: bash publish.sh
        working-directory: tools/packager
        env:
          OUT_DIR: ${{ github.workspace }}/out/packages
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit changes
        if: env.package_update_needed == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "WhatsApp Web v${{ env.NEWEST_WA_VERSION }}"
          tagging_message: "v${{ env.NEWEST_WA_VERSION }}"
